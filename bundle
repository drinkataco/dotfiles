#!/bin/sh
BASE_DIR=$(cd -- "$(dirname -- "$0")" && pwd)
SCRIPTS_DIR="${BASE_DIR}/scripts"
readonly BASE_DIR
readonly SCRIPTS_DIR

#########################################
# Bootstraps system to run scripts
# Globals:
#   None
# Arguments:
#   1 - system type
# Returns:
#   None
#######################################
bootstrap() {
  system=$1
  boostrap_script="${BASE_DIR}/system/${system}/bootstrap.sh"

  if [ -f "${boostrap_script}" ]; then
    # shellcheck disable=SC1090
    . "${boostrap_script}"
  fi

  # TODO: Mac boostrap:
  # 1. xcode
  # 2. brew
  # 3. zsh, omz
  # 4.

  # TODO: bootstrapping should list a blacklist of dependencies to now not install
}

#########################################
# Main method to run script and find the bash script it must run
# Globals:
#   BASE_DIR
#   SCRIPTS_DIR
# Arguments:
#   ...args - consult readme
#######################################
main() {
  # Get system type
  readonly machine=$(uname -s)

  case "${machine}" in
    Darwin*)
      type=macos
    ;;
    Linux*)
      type=linux
      # TODO: check distro
    ;;
    *)
      echo "Unknown System: ${machine}"
      exit 1
    ;;
  esac

  # Check parameters for operations
  for i in "$@" ; do
    case "${machine}" in
      --bootstrap*)
        bootstrap=1
        shift
      ;;
      --update*)
        # TODO: update methods. update.sh?
      ;;
    esac
  done

  if [ -z $bootstrap ]; then
    bootstrap "${type}"
  fi

  # we'll assume that boostrapping installed Bash 5> on the system, so we can bash all the other scripts
  bash "${SCRIPTS_DIR}/dotfiles.sh" "${@}"
}

main "${@}"
